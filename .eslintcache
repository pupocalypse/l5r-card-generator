[{"/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/index.js":"1","/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/App.js":"2","/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/Card.js":"3","/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/InputForm.js":"4","/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/FormContainer.js":"5","/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/ImageUpload.js":"6","/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/CardPhoto.js":"7"},{"size":340,"mtime":1628915708963,"results":"8","hashOfConfig":"9"},{"size":1895,"mtime":1628968450417,"results":"10","hashOfConfig":"9"},{"size":3437,"mtime":1612569505233,"results":"11","hashOfConfig":"9"},{"size":7793,"mtime":1628964647036,"results":"12","hashOfConfig":"9"},{"size":756,"mtime":1612922916208,"results":"13","hashOfConfig":"9"},{"size":2209,"mtime":1612923097800,"results":"14","hashOfConfig":"9"},{"size":358,"mtime":1612922317371,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m3eb04",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/index.js",[],"/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/App.js",["32","33","34"],"/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/Card.js",[],["35","36"],"/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/InputForm.js",["37","38","39","40","41","42","43","44","45","46","47"],"import { Form } from \"semantic-ui-react\";\n\nconst clanOptions = [\n  { text: \"Crab\", value: \"crab\" },\n  { text: \"Crane\", value: \"crane\" },\n  { text: \"Dragon\", value: \"dragon\" },\n  { text: \"Lion\", value: \"lion\" },\n  { text: \"Mantis\", value: \"mantis\" },\n  { text: \"Phoenix\", value: \"phoenix\" },\n  { text: \"Scorpion\", value: \"scorpion\" },\n  { text: \"Spider\", value: \"spider\" },\n  { text: \"Unicorn\", value: \"unicorn\" },\n  { text: \"Unaligned\", value: \"unaligned\" },\n];\n\nfunction InputForm({ cardState, setCardState }) {\n  const {\n    name,\n    nameTitle,\n    clan,\n    experienced,\n    expLevel,\n    titles,\n    keywords,\n    quote,\n  } = cardState;\n\n  const selectOptionsClans = clanOptions.map((clan) => {\n    return (\n      <option\n        value={clan.value}\n        selected={clan.text === \"Unaligned\" ? true : false}\n      >\n        {clan.text}\n      </option>\n    );\n  });\n\n  // update internal form state\n  const changeHandler = (e, { name, value, checked }, index) => {\n    const data = { ...cardState };\n\n    if (typeof index === \"number\") {\n      data[name][index] = value;\n    } else if (typeof checked === \"boolean\") {\n      data[name] = checked;\n    } else {\n      data[name] = value;\n    }\n\n    setCardState(data);\n  };\n\n  // send changes up to the parent to give access to Card\n  const updateHandler = () => {\n    console.log(\"button was clicked\");\n  };\n\n  return (\n    <form className=\"form\">\n      <fieldset>\n        <label htmlFor=\"name\">\n          <span>\n            Name <em>(Family, Given)</em>\n          </span>\n          <input type=\"text\" name=\"name\" id=\"name\" value={cardState.name} />\n        </label>\n        <label htmlFor=\"nameTitle\">\n          <span>\n            Title <em>(Optional)</em>\n          </span>\n          <input\n            type=\"text\"\n            name=\"nameTitle\"\n            id=\"nameTitle\"\n            value={cardState.nameTitle}\n          />\n        </label>\n      </fieldset>\n\n      <fieldset>\n        <label htmlFor=\"clan\">\n          <span>Clan</span>\n          <select name=\"clan\" id=\"clan\">\n            {selectOptionsClans}\n          </select>\n        </label>\n\n        <label htmlFor=\"experienced\">\n          <input\n            type=\"checkbox\"\n            name=\"experienced\"\n            id=\"experienced\"\n            value={cardState.experienced}\n          />\n          <span>Experienced?</span>\n        </label>\n\n        <label htmlFor=\"expLevel\">\n          <select\n            name=\"expLevel\"\n            id=\"expLevel\"\n            disabled={!cardState.experienced}\n          >\n            <option value={cardState.expLevel}>1</option>\n            <option value={cardState.expLevel}>2</option>\n            <option value={cardState.expLevel}>3</option>\n          </select>\n        </label>\n      </fieldset>\n\n      <fieldset>\n        <label htmlFor=\"titles0\">\n          <span>Title 1</span>\n          <input\n            type=\"text\"\n            name=\"titles\"\n            id=\"titles0\"\n            value={cardState.titles[0]}\n          />\n        </label>\n        <label htmlFor=\"titles1\">\n          <span>Title 2</span>\n          <input\n            type=\"text\"\n            name=\"titles\"\n            id=\"titles1\"\n            value={cardState.titles[1]}\n          />\n        </label>\n        <label htmlFor=\"titles2\">\n          <span>Title 3</span>\n          <input\n            type=\"text\"\n            name=\"titles\"\n            id=\"titles2\"\n            value={cardState.titles[2]}\n          />\n        </label>\n      </fieldset>\n\n      <fieldset>\n        <label htmlFor=\"keywords0\">\n          <span>Keyword</span>\n          <input\n            type=\"text\"\n            name=\"keywords\"\n            id=\"keywords0\"\n            value={cardState.keywords[0]}\n          />\n        </label>\n        <label htmlFor=\"keywords1\">\n          <span>Keyword</span>\n          <input\n            type=\"text\"\n            name=\"keywords\"\n            id=\"keywords1\"\n            value={cardState.keywords[1]}\n          />\n        </label>\n        <label htmlFor=\"keywords2\">\n          <span>Keyword</span>\n          <input\n            type=\"text\"\n            name=\"keywords\"\n            id=\"keywords2\"\n            value={cardState.keywords[2]}\n          />\n        </label>\n      </fieldset>\n\n      <fieldset>\n        <label htmlFor=\"quote\">\n          <textarea name=\"quote\" id=\"quote\" value={cardState.quote}></textarea>\n        </label>\n      </fieldset>\n\n      <button type=\"button\">Save Card</button>\n    </form>\n    // // <section className=\"form-container\">\n    // <Form size=\"small\" onSubmit={updateHandler}>\n    //   <Form.Group widths=\"equal\">\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"name\"\n    //       label=\"Name (Family, Given)\"\n    //       value={name}\n    //       onChange={changeHandler}\n    //     />\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"nameTitle\"\n    //       label=\"Title (Optional)\"\n    //       value={nameTitle}\n    //       onChange={changeHandler}\n    //     />\n    //   </Form.Group>\n    //   <Form.Group inline>\n    //     <Form.Select\n    //       // fluid\n    //       size=\"mini\"\n    //       search\n    //       name=\"clan\"\n    //       label=\"Clan\"\n    //       options={clanOptions}\n    //       value={clan}\n    //       onChange={changeHandler}\n    //     />\n    //     <Form.Checkbox\n    //       name=\"experienced\"\n    //       label=\"Experienced?\"\n    //       checked={experienced}\n    //       onChange={changeHandler}\n    //     />\n    //     <Form.Select\n    //       compact\n    //       size=\"mini\"\n    //       name=\"expLevel\"\n    //       options={[\n    //         { text: \"1\", value: \"1\" },\n    //         { text: \"2\", value: \"2\" },\n    //         { text: \"3\", value: \"3\" },\n    //       ]}\n    //       value={expLevel}\n    //       onChange={changeHandler}\n    //     />\n    //   </Form.Group>\n    //   <Form.Group widths=\"equal\">\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"titles\"\n    //       label=\"Title 1\"\n    //       value={titles[0]}\n    //       onChange={(e, data) => changeHandler(e, data, 0)}\n    //     />\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"titles\"\n    //       label=\"Title 2\"\n    //       value={titles[1]}\n    //       onChange={(e, data) => changeHandler(e, data, 1)}\n    //     />\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"titles\"\n    //       label=\"Title 3\"\n    //       value={titles[2]}\n    //       onChange={(e, data) => changeHandler(e, data, 2)}\n    //     />\n    //   </Form.Group>\n    //   <Form.Group widths=\"equal\">\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"keywords\"\n    //       label=\"Keyword\"\n    //       value={keywords[0]}\n    //       onChange={(e, data) => changeHandler(e, data, 0)}\n    //     />\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"keywords\"\n    //       label=\"Keyword\"\n    //       value={keywords[1]}\n    //       onChange={(e, data) => changeHandler(e, data, 1)}\n    //     />\n    //     <Form.Input\n    //       fluid\n    //       size=\"mini\"\n    //       name=\"keywords\"\n    //       label=\"Keyword\"\n    //       value={keywords[2]}\n    //       onChange={(e, data) => changeHandler(e, data, 2)}\n    //     />\n    //   </Form.Group>\n    //   <Form.TextArea\n    //     fluid\n    //     name=\"quote\"\n    //     label=\"Quote (Optional)\"\n    //     value={quote}\n    //     onChange={changeHandler}\n    //   />\n    //   {/* upload image */}\n    //   {/* image edit controls? scaling, transform? */}\n    //   {/* try croppie library */}\n    //   {/* <Form.Button>Update</Form.Button> */}\n    // </Form>\n    // // </section>\n  );\n}\n\nexport default InputForm;\n","/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/FormContainer.js",[],"/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/ImageUpload.js",[],"/Users/pupocalypse/Desktop/Code/l5r-card-generator/src/components/CardPhoto.js",[],{"ruleId":"48","severity":1,"message":"49","line":7,"column":10,"nodeType":"50","messageId":"51","endLine":7,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":24,"column":9,"nodeType":"50","messageId":"51","endLine":24,"endColumn":23},{"ruleId":"53","severity":1,"message":"54","line":25,"column":21,"nodeType":"50","messageId":"55","endLine":25,"endColumn":30},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"48","severity":1,"message":"60","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":14},{"ruleId":"48","severity":1,"message":"61","line":18,"column":5,"nodeType":"50","messageId":"51","endLine":18,"endColumn":9},{"ruleId":"48","severity":1,"message":"62","line":19,"column":5,"nodeType":"50","messageId":"51","endLine":19,"endColumn":14},{"ruleId":"48","severity":1,"message":"63","line":20,"column":5,"nodeType":"50","messageId":"51","endLine":20,"endColumn":9},{"ruleId":"48","severity":1,"message":"64","line":21,"column":5,"nodeType":"50","messageId":"51","endLine":21,"endColumn":16},{"ruleId":"48","severity":1,"message":"65","line":22,"column":5,"nodeType":"50","messageId":"51","endLine":22,"endColumn":13},{"ruleId":"48","severity":1,"message":"66","line":23,"column":5,"nodeType":"50","messageId":"51","endLine":23,"endColumn":11},{"ruleId":"48","severity":1,"message":"67","line":24,"column":5,"nodeType":"50","messageId":"51","endLine":24,"endColumn":13},{"ruleId":"48","severity":1,"message":"68","line":25,"column":5,"nodeType":"50","messageId":"51","endLine":25,"endColumn":10},{"ruleId":"48","severity":1,"message":"69","line":40,"column":9,"nodeType":"50","messageId":"51","endLine":40,"endColumn":22},{"ruleId":"48","severity":1,"message":"70","line":55,"column":9,"nodeType":"50","messageId":"51","endLine":55,"endColumn":22},"no-unused-vars","'activeTab' is assigned a value but never used.","Identifier","unusedVar","'clickActiveTab' is assigned a value but never used.","no-use-before-define","'activeTab' was used before it was defined.","usedBeforeDefined","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'Form' is defined but never used.","'name' is assigned a value but never used.","'nameTitle' is assigned a value but never used.","'clan' is assigned a value but never used.","'experienced' is assigned a value but never used.","'expLevel' is assigned a value but never used.","'titles' is assigned a value but never used.","'keywords' is assigned a value but never used.","'quote' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","'updateHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]